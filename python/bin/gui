#!/usr/bin/env python
import _localpaths
from mocap_bridge.gui.manager_view import ManagerView
from mocap_bridge.readers.json_reader import JsonReader
from mocap_bridge.gui.json_reader_view import JsonReaderView
from mocap_bridge.readers.osc_reader import OscReader
from mocap_bridge.gui.osc_reader_view import OscReaderView
from mocap_bridge.writers.osc_writer import OscWriter
from mocap_bridge.gui.osc_writer_view import OscWriterView
from mocap_bridge.readers.natnet_reader import NatnetReader
from mocap_bridge.gui.natnet_reader_view import NatnetReaderView
from mocap_bridge.writers.json_writer import JsonWriter
from mocap_bridge.gui.json_writer_view import JsonWriterView

import Tkinter as tk

class GuiApp(tk.Frame):
    def __init__(self, master=None):
        tk.Frame.__init__(self, master, padx=10, pady=10)
        self.grid()
        self.setup()

    def setup(self):
        self.master.title('MoCap')

        # controls/buttons at the top
        self.quitButton = tk.Button(self, text='Quit', command=self.quit)
        self.quitButton.grid(column=0, row=0)

        # subviews
        self.manager_view = ManagerView(parent=self)
        self.natnet_reader = NatnetReader(manager=self.manager_view.manager, autoStart=False)
        self.natnet_reader_view = NatnetReaderView(parent=self, natnet_reader=self.natnet_reader)
        self.osc_reader = OscReader(manager=self.manager_view.manager, autoStart=False)
        self.osc_reader_view = OscReaderView(osc_reader=self.osc_reader, parent=self)
        self.json_reader = JsonReader(path='data/sampleRecording3.json', manager=self.manager_view.manager, autoStart=False)
        self.json_reader_view = JsonReaderView(self.json_reader, parent=self)
        self.osc_writer = OscWriter(manager=self.manager_view.manager, autoStart=False)
        self.osc_writer_view = OscWriterView(osc_writer=self.osc_writer, parent=self)
        self.json_writer = JsonWriter(manager=self.manager_view.manager, autoStart=False)
        self.json_writer_view = JsonWriterView(self.json_writer, parent=self)

        self.update()

    def update(self):
        if self.natnet_reader:
            self.natnet_reader.update()

        if self.osc_reader:
            self.osc_reader.update()

        if self.json_reader:
            self.json_reader.update()


        self.after(1, self.update) # schedule next update (tkinter doesn't seem to provide a nice way to do every-iteration-updates)

app = GuiApp()
app.mainloop()
